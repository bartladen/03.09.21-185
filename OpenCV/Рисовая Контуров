#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <opencv2/imgcodecs.hpp>

using namespace cv;
using namespace std;
Mat img;
int main(int argc, char** arvg)
{
    setlocale(LC_ALL, "Russian");
    char filename[80];//road.jpg
    cout << "введите имя файла, в которых хотите внести изменения, и нажмите Enter" << endl;
    cin.getline(filename, 80);
    cout << "Открытый файл";
    cout << filename << endl;//C:/Users/Администратор/Downloads/3448079982.jpg
    Mat img = imread(filename, 1);
  
    namedWindow("Исходное изображение", WINDOW_AUTOSIZE);
    imshow("Исходное изображение", img);
    Mat canny_output;
   /* imshow("Load", img);*/
    Mat src_gray;
    Mat _img;
    cvtColor(img, src_gray, COLOR_RGB2GRAY);
    blur(src_gray, src_gray, Size(3, 3));
    double otsu_thresh_val = threshold(src_gray,_img, 0, 255, THRESH_BINARY|THRESH_OTSU);
    double hight_trhesh_val = otsu_thresh_val, lower_thresh_val = otsu_thresh_val * 0.5;
    cout << otsu_thresh_val;
    Canny(src_gray, canny_output, lower_thresh_val, hight_trhesh_val, 3);
    namedWindow("Серое изображение", WINDOW_AUTOSIZE);
    imshow("Серое изображение", canny_output);
    imwrite("canny_output.jpg", canny_output);
    RNG rng(12345);
    vector<vector<Point>>contours;
    vector<Vec4i>hierachy;
    findContours(canny_output, contours, hierachy, RETR_TREE, CHAIN_APPROX_SIMPLE, Point(0, 0));
    vector<Moments>mu(contours.size());
    for (int i = 0; i < contours.size(); i++)
    {
        mu[i] = moments(contours[i], false);
    }
    vector<Point2f>mc(contours.size());
    for (int i = 0; i < contours.size(); i++)
    {
        mc[i] = Point2f(mu[i].m10 / mu[i].m00, mu[i].m01 / mu[i].m00);
    }
    for (int i = 0; i < contours.size(); i++)
    {
        printf("Контур № %d: центр масс - %.2f y=%.2f; длина - %.2f\n", i, mu[i].m10 / mu[i].m00, mu[i].m01 / mu[i].m00, arcLength(contours[i], true));
    };
    Mat drawing = Mat::zeros(canny_output.size(), CV_8UC3);//cv_8uc3 - изаборажение без знака с 3 каналами
    for (int i = 0; i < contours.size(); i++)
    {
        Scalar color = Scalar(rng.uniform(0, 255), rng.uniform(0, 255), rng.uniform(0, 255));
        drawContours(drawing, contours, i, color, 2, 8, hierachy, 0, Point());
        circle(drawing, mc[i], 4, color, -1, 5, 0);
    }
    namedWindow("Контуры", WINDOW_AUTOSIZE);
    imshow("Контуры", drawing);
    waitKey(0);
    system("pause");
    return 0;
}
